{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAoBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEnDA,MA3BPL,EAAKc,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBAMN,IAJA,IAAIX,EAAQY,OAAOjB,EAAKK,MAAMa,OAC1BC,EAAOF,OAAOjB,EAAKmB,KAAKD,OACxBE,EAASH,OAAOjB,EAAKoB,OAAOF,OAEvBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChClB,EAAckB,EAAGhB,GACdiB,MAAK,SAAAC,G,OAAUC,EAAA1B,GAAS2B,OAAOC,QAAQH,MACvCI,OAAM,SAAAC,G,OAASJ,EAAA1B,GAAS2B,OAAOI,QAAQD,MAE1CvB,GAASc,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onPromisesCreate);\n\nfunction onPromisesCreate(event) {\n  event.preventDefault();\n\n  let delay = Number(form.delay.value);\n  let step = Number(form.step.value);\n  let amount = Number(form.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","event","preventDefault","Number","value","step","amount","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.3c2932e4.js.map"}